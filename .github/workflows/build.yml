name: Build

on: push

env:
  go_version: "1.18"

jobs:
  backend-lint:
    name: Backend Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ~${{ env.go_version }}
      - run: go generate
      - name: Lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.48
          args: --timeout=5m

  backend-test:
    name: Backend Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ~${{ env.go_version }}
      - uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - run: go generate
      - name: Test
        run: go test ./...

  build:
    name: Build Image
    runs-on: ubuntu-latest
    needs: [backend-lint, backend-test]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/gabe565/transsmute
          tags: |
            type=raw,priority=1000,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=ref,event=branch
            type=sha
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: .
          pull: true
          push: true
          platforms: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64/v8
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-prod:
    name: Deploy Production
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    environment: prod
    concurrency: prod
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: gabe565/fleet-infra
          token: ${{ secrets.PAT }}
      - id: vars
        name: Build deployment vars
        run: |
          echo "tag=sha-${GITHUB_SHA:0:7}" >> $GITHUB_OUTPUT
      - name: Bump version
        uses: clevyr/yampl-action@v1
        with:
          file: apps/tennant/transsmute/helmrelease.yaml
          values: |
            tag=${{ steps.vars.outputs.tag }}
          commit_message: ":arrow_up: [${{ github.event.repository.name }}] Bump version to ${{ steps.vars.outputs.tag }}"
